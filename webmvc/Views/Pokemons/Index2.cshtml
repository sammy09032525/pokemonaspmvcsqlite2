@model webmvc.ViewModels.PokemonViewModel

@{
    ViewData["Title"] = "Pokémon";
}

<h1>Pokémon</h1>
@if (User.Identity.IsAuthenticated)
{
    <a asp-action="Favorites">Favorites</a>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(x => x.AvailablePokemons.Results.GetEnumerator().Current.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.AvailablePokemons.Results)
        {
            var isFavorite = Model.FavoritePokemons.Any(p => p.Id.ToString() == item.Url);
        <tr>
            <td>
                <a asp-action="Details" asp-route-id="@item.Url">@item.Name</a>
            </td>
            <td>
                @if(!isFavorite && Model.IsAuthenticated){
                <a asp-action="Favor" asp-route-id="@item.Url">Favor</a> 
                }
@*              <a asp-action="Unfavor" asp-route-id="@item.Url">Unfavor</a> *@            
            </td>
        </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = string.IsNullOrEmpty(Model.AvailablePokemons.Previous) ? "disabled" : "";
    var nextDisabled = string.IsNullOrEmpty(Model.AvailablePokemons.Next) ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-offset="@(Model.AvailablePokemons.Previous)"
   class="btn btn-link @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-offset="@(Model.AvailablePokemons.Next)"
   class="btn btn-link @nextDisabled">
    Next
</a>